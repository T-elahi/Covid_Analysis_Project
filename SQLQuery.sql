--- USING THE DATABASE PORTFOLIO PROJECT

USE PORTFOLIO_PROJECT

--- DISPLAYING THE COVID_DEATHS TABLE CONTENTS

SELECT * FROM CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3,4

---FINDING RANK OF COUNTRIES AS PER THEIR POPULATION

WITH CTE AS (SELECT LOCATION, POPULATION, ROW_NUMBER() OVER(PARTITION BY LOCATION ORDER BY POPULATION DESC) AS ROW_RANK
FROM CovidDeaths
WHERE continent IS NOT NULL), 
CTE2 AS (SELECT * FROM CTE WHERE ROW_RANK = 1)
SELECT LOCATION, POPULATION, DENSE_RANK() OVER (ORDER BY POPULATION DESC)  POPULATION_RANK
FROM CTE2

----WE ARE SELECTING DATA WHICH WILL BE USED AND CASTING DATE-TIME DATATYPE TO DATE TYPE FOR CONVINIENCE USING CAST().

SELECT LOCATION, CAST(DATE AS DATE) AS DATE, TOTAL_CASES, NEW_CASES, TOTAL_DEATHS, POPULATION
FROM CovidDeaths
ORDER BY 1, 2

--- TOTAL CASES VS TOTAL DEATHS IN INDIA

SELECT LOCATION, CAST(DATE AS DATE) AS DATE, TOTAL_CASES, TOTAL_DEATHS, ROUND((total_deaths/total_cases)*100, 3) AS DEATH_PERCENTAGE
FROM CovidDeaths
WHERE location = 'INDIA' 
ORDER BY 2

--- TOTAL CASES VS POPULATION IN INDIA

SELECT LOCATION, CAST(DATE AS DATE) AS DATE, POPULATION, TOTAL_CASES, ROUND((total_cases/population)*100, 3) AS TOTAL_CASES_PERCENTAGE
FROM CovidDeaths
WHERE location = 'INDIA'
ORDER BY 2

--- COUNTRIES WITH HIGHEST INFECTION RATE VS POPULATION

SELECT LOCATION, POPULATION, MAX(TOTAL_CASES) AS HIGHEST_INFECTION_COUNT, MAX(ROUND((total_cases/population)*100, 3)) AS TOTAL_CASES_PERCENTAGE
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY LOCATION, POPULATION
ORDER BY TOTAL_CASES_PERCENTAGE DESC

--- COUNTRIES WITH HIGHEST DEATH RATE VS POPULATION

SELECT UPPER(LOCATION), MAX(CAST(total_deaths AS INT)) AS COUNTRIES_HIGHEST_DEATH_COUNT
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY LOCATION
ORDER BY COUNTRIES_HIGHEST_DEATH_COUNT DESC

--- CONTINENTS WITH HIGHEST DEATH RATE VS POPULATION

SELECT continent, MAX(CAST(total_deaths AS INT)) AS CONTINENTS_HIGHEST_DEATH_COUNT
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY CONTINENTS_HIGHEST_DEATH_COUNT DESC

---GLOBAL NUMBERS OF INFECTION VS DEATHS EVERYDAY

SELECT DATE, SUM(NEW_CASES) AS INFECTION_CASES, SUM(CAST(new_deaths AS INT)) AS DEATHS, ROUND((SUM(CAST(new_deaths AS INT))/SUM(NEW_CASES))*100, 3) AS DEATH_PERCENTAGE
FROM CovidDeaths
WHERE continent IS NOT NULL
GROUP BY DATE
ORDER BY 1

---TOTAL CASES VS TOTAL DEATH IN THE WORLD

SELECT SUM(NEW_CASES) AS TOTAL_INFECTION_CASES, SUM(CAST(new_deaths AS INT)) AS TOTAL_DEATHS, ROUND((SUM(CAST(new_deaths AS INT))/SUM(NEW_CASES))*100, 3) AS TOTAL_DEATH_PERCENTAGE
FROM CovidDeaths
WHERE continent IS NOT NULL

--- DISPLAYING THE COVID_VACCINATIONS TABLE CONTENTS

SELECT * FROM CovidVaccinations
WHERE continent IS NOT NULL
ORDER BY 3,4

---JOINING COVID_DEATHS & COVID_VACCINATIONS TABLE 

SELECT DEA.continent, DEA.location, CAST(DEA.DATE AS DATE) DATE, DEA.POPULATION, VAC.new_vaccinations,
SUM(CONVERT(INT,VAC.new_vaccinations)) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.DATE) AS CUMULATIVE_VACCINATIONS
FROM CovidDeaths DEA
JOIN CovidVaccinations VAC
ON DEA.LOCATION = VAC.LOCATION AND DEA.DATE = VAC.DATE
WHERE DEA.continent IS NOT NULL

---PERCENTAGE OF POPULATION VACCINATED

DROP TABLE IF EXISTS POPULATION_VACCINATED_PERCENATGE

CREATE TABLE POPULATION_VACCINATED_PERCENATGE(
CONTINENT NVARCHAR(255),
LOCATION NVARCHAR(255),
DATE DATE,
POPULATION NUMERIC,
NEW_VACCINATIONS NUMERIC,
CUMULATIVE_VACCINATIONS NUMERIC
)

INSERT INTO POPULATION_VACCINATED_PERCENATGE
SELECT DEA.continent, DEA.location, CAST(DEA.DATE AS DATE) DATE, DEA.POPULATION, VAC.new_vaccinations,
SUM(CONVERT(INT,VAC.new_vaccinations)) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.DATE) AS CUMULATIVE_VACCINATIONS
FROM CovidDeaths DEA
JOIN CovidVaccinations VAC
ON DEA.LOCATION = VAC.LOCATION AND DEA.DATE = VAC.DATE
WHERE DEA.continent IS NOT NULL

SELECT *, ROUND((CUMULATIVE_VACCINATIONS/POPULATION)*100, 3) AS CUMULATIVE_VACCINATIONS_PERCENTAGE
FROM POPULATION_VACCINATED_PERCENATGE